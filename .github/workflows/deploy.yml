name: Deploy HederaSwarm

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      network:
        description: 'Network to deploy to'
        required: true
        default: 'testnet'
        type: choice
        options:
          - testnet
          - mainnet

env:
  NODE_VERSION: '18'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Install dependencies
        run: bun install
      
      - name: Run tests
        run: bun test
      
      - name: Type check
        run: bun run typecheck
      
      - name: Lint
        run: bun run lint

  deploy-contracts:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    
    steps:
      - uses: actions/checkout@v3
      
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Install dependencies
        run: |
          cd contracts
          bun install
      
      - name: Compile contracts
        run: |
          cd contracts
          bun run compile
      
      - name: Deploy contracts
        env:
          ACCOUNT_ID: ${{ secrets.HEDERA_ACCOUNT_ID }}
          PRIVATE_KEY: ${{ secrets.HEDERA_PRIVATE_KEY }}
        run: |
          cd contracts
          bun run deploy:${{ github.event.inputs.network }}
      
      - name: Upload deployment artifacts
        uses: actions/upload-artifact@v3
        with:
          name: deployment-${{ github.event.inputs.network }}
          path: contracts/deployments/

  initialize-topics:
    needs: deploy-contracts
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    
    steps:
      - uses: actions/checkout@v3
      
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Download deployment artifacts
        uses: actions/download-artifact@v3
        with:
          name: deployment-${{ github.event.inputs.network }}
          path: deployments/
      
      - name: Install dependencies
        run: bun install
      
      - name: Initialize HCS topics
        env:
          HEDERA_ACCOUNT_ID: ${{ secrets.HEDERA_ACCOUNT_ID }}
          HEDERA_PRIVATE_KEY: ${{ secrets.HEDERA_PRIVATE_KEY }}
          HEDERA_NETWORK: ${{ github.event.inputs.network }}
        run: bun run init:topics:${{ github.event.inputs.network }}
      
      - name: Upload topic artifacts
        uses: actions/upload-artifact@v3
        with:
          name: topics-${{ github.event.inputs.network }}
          path: deployments/topics.json

  deploy-agents:
    needs: initialize-topics
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.network == 'testnet'
    
    steps:
      - uses: actions/checkout@v3
      
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: deployments/
      
      - name: Install dependencies
        run: bun install
      
      - name: Deploy initial agents
        env:
          HEDERA_ACCOUNT_ID: ${{ secrets.HEDERA_ACCOUNT_ID }}
          HEDERA_PRIVATE_KEY: ${{ secrets.HEDERA_PRIVATE_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          HEDERA_NETWORK: ${{ github.event.inputs.network }}
        run: bun run deploy:agents:${{ github.event.inputs.network }}

  deploy-web:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v3
      
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Install dependencies
        run: |
          cd web-interface
          bun install
      
      - name: Build web interface
        env:
          NEXT_PUBLIC_HEDERA_NETWORK: ${{ secrets.NEXT_PUBLIC_HEDERA_NETWORK }}
          NEXT_PUBLIC_SWARM_ORCHESTRATOR_ADDRESS: ${{ secrets.NEXT_PUBLIC_SWARM_ORCHESTRATOR_ADDRESS }}
          NEXT_PUBLIC_EVOLUTION_ENGINE_ADDRESS: ${{ secrets.NEXT_PUBLIC_EVOLUTION_ENGINE_ADDRESS }}
          NEXT_PUBLIC_MIRROR_NODE_URL: ${{ secrets.NEXT_PUBLIC_MIRROR_NODE_URL }}
        run: |
          cd web-interface
          bun run build
      
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./web-interface